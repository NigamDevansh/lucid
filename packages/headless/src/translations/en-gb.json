{
	"headers_already_sent": "Headers were already sent.",
	"default_error_name": "An error occurred!",
	"default_error_message": "An error occurred! Please try again later.",
	"validation_error": "Validation error!",
	"authorisation_error": "Authorisation error.",
	"forbidden_error": "Forbidden error!",
	"dynamic_an_error_occurred_saving_default": "An error occurred while saving the default {{name}}.",
	"an_error_occurred_clearing_expired_tokens": "An error occurred while clearing expired tokens.",
	"swagger_response_200": "Successfull response",
	"swagger_response_201": "Resource created response",
	"swagger_response_204": "No content response",
	"swagger_response_400": "Bad request response",
	"swagger_response_401": "Unauthorised response",
	"swagger_response_403": "Forbidden response",
	"swagger_response_404": "Not found response",
	"swagger_response_500": "Internal server error response",
	"swagger_csrf_header_description": "A token that is used to protect against CSRF attacks. CSRF middleware expects this value to be passed in the header so it can be compared to the httpOnly _csrf cookie.",
	"swagger_access_header_description": "Stores the access token that is used to authenticate requests.",
	"swagger_refresh_header_description": "Stores the refresh token that can be used to obtain a new access token when the current one expires.",
	"login_error_name": "There was an error logging in.",
	"login_error_message": "The username/email or password you entered is incorrect.",
	"validation_body_error_message": "Please check the request body and try again.",
	"multipart_body_validation_error_message": "Please ensure the multipart/form-data body value is valid JSON.",
	"validation_query_error_message": "Please check the query parameters and try again.",
	"validation_params_error_message": "Please check the request parameters and try again.",
	"access_token_error_name": "There was an error obtaining an access token.",
	"access_token_error_message": "There was an error obtaining an access token. Please try logging in again.",
	"refresh_token_error_name": "There was an error obtaining a new access token.",
	"refresh_token_error_message": "There was an error obtaining a new access token. Please try logging in again.",
	"not_authorised_to_perform_action": "You are not authorised to perform this action.",
	"failed_to_validate_csrf_token": "Failed to validate CSRF token.",
	"user": "User",
	"error_not_found_name": "{{name}} Not Found",
	"error_not_found_message": "{{name}} resource could not be found.",
	"invalid_brick_keys": "Invalid brick keys.",
	"make_sure_all_assigned_bricks_are_valid": "Please make sure all assigned bricks are valid.",
	"brick_with_key_not_found": "Brick with key '{{key}}' not found.",
	"invalid_collection_keys": "Invalid collection keys.",
	"make_sure_all_assigned_collections_are_valid": "Please make sure all assigned collections are valid.",
	"collection_with_key_not_found": "Collection with key '{{key}}' not found.",
	"error_already_exists_name": "{{name}} Already Exists",
	"environment_with_key_already_exists": "Environment with key '{{key}}' already exists.",
	"environment": "Environment",
	"error_not_created_name": "{{name}} Not Created",
	"error_not_created_message": "{{name}} could not be created. Please try again later.",
	"error_not_min_entries_name": "{{name}} Not Enough Entries",
	"error_not_min_entries_message": "{{name}} must have at least 1 entry at all times.",
	"the_permission_is_invalid_against_mesage": "The permission '{{permission}}' is invalid against {{group}} permissions.",
	"dynamic_error_name": "{{name}} Error",
	"creation_error_message": "An error occurred while creating {{name}}.",
	"deletion_error_message": "An error occurred while deleting {{name}}.",
	"update_error_message": "An error occurred while updating {{name}}.",
	"not_unique_error_message": "Please ensure that the value is unique and try again.",
	"this_email_is_already_in_use": "This email is already in use.",
	"this_username_is_already_in_use": "This username is already in use.",
	"you_do_not_have_permission_to_perform_this_action": "You do not have permission to perform this action.",
	"role": "Role",
	"account": "Account",
	"your_account": "your account",
	"permission": "Permission",
	"language": "Language",
	"error_invalid": "Invalid {{type}}",
	"language_iso_639_1": "ISO 639-1",
	"email": "Email",
	"db_connection_error": "An error occurred while connecting to the database.",
	"if_account_exists_with_email_not_found": "If an account exists with the email provided, a password reset link will be sent to the email address.",
	"error_creating_user_token": "An error occurred while creating the token.",
	"reset_password_email_subject": "Reset your password",
	"password_reset_success_subject": "Password reset successful",
	"token": "Token",
	"please_ensure_passwords_match": "Please ensure that the passwords match and try again.",
	"media": "Media",
	"ensure_file_has_been_uploaded": "Please ensure that a file has been uploaded and try again.",
	"make_sure_all_translations_languages_exist": "Please make sure all translation languages exist.",
	"option": "Option",
	"file_too_large_max_size_is": "File {{name}} is too large. Max file size is {{size}} bytes.",
	"file_exceeds_storage_limit_max_limit_is": "Files exceed storage limit. Max storage limit is {{size}} bytes.",
	"failed_to_save_object": "An error occured while saving the object to S3",
	"object_successfully_saved": "Object successfully saved to S3",
	"object_successfully_updated": "Object successfully updated in S3",
	"objects_successfully_deleted": "Objects successfully deleted from S3",
	"object_successfully_deleted": "Object successfully deleted from S3",
	"translation": "Translation",
	"swagger_content_language_header_description": "The language id of the content you wish to filter translations by. If left empty, the default language will be used.",
	"collection": "Collection",
	"collection_not_found_message": "Collection with key \"{{collectionKey}}\" under environment \"{{environmentKey}}\" not found",
	"brick": "Brick",
	"swagger_query_string_include_description": "Seperate values by a comma if you want to include multiple values",
	"swagger_query_string_filter_description": "Seperate values by a comma if you want to filter by multiple values",
	"swagger_query_string_sort_description": "Prefix the value with a minus sign (-) to sort in descending order and seperate values by a comma if you want to sort by multiple values",
	"swagger_query_string_page_description": "The page number of the paginated response",
	"swagger_query_string_per_page_description": "The number of items per page in the paginated response"
}
